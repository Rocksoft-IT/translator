name: publish
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  run_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: microsoft/variable-substitution@v1
        with:
          files: "Rocksoft.Translator.Tests/testsettings.json"
        env:
          TranslatorConfig.SubscriptionKey: ${{ secrets.AZURE_TRANSLATOR_SUBSCRIPTION_KEY }}
          TranslatorConfig.SubscriptionRegion: ${{ secrets.AZURE_TRANSLATOR_SUBSCRIPTION_REGION }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Run tests
        run: dotnet test --configuration Release
  
  create_nuget:
    runs-on: ubuntu-latest
    needs: [ run_test ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
      
      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      
      # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}
      
      # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg
          
  deploy:
    # Publish only when creating a GitHub Release
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      - name: Authenticate to GitHub Packages
        run: | 
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Rocksoft-IT/index.json"

      # Publish all NuGet packages
      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.GIT_PAT }}" --source github --skip-duplicate
          }